name: Python bindings

on:
    push:
    pull_request:

env:
    HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
    build:
        name: build on ${{ matrix.os }} with Python ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

        steps:
            - name: Download source
              run: |
                  git clone https://github.com/arvidn/libtorrent.git --depth=1 --recurse-submodules --branch master

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            # -----------------------------------------------------------
            # Install and prepare Boost in-tree (Linux & macOS & Windows)
            # -----------------------------------------------------------
            - name: Clone Boost (all non-Windows)
              if: runner.os != 'Windows'
              run: |
                  cd libtorrent
                  git clone --depth=1 --recurse-submodules --branch=boost-1.84.0 \
                    https://github.com/boostorg/boost.git boost
            - name: Bootstrap Boost (all non-Windows)
              if: runner.os != 'Windows'
              run: |
                  cd libtorrent/boost
                  ./bootstrap.sh
            - name: Install Boost headers (all non-Windows)
              if: runner.os != 'Windows'
              run: |
                  cd libtorrent/boost
                  ./b2 headers

            - name: Clone Boost (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent
                  git clone --depth=1 --recurse-submodules --branch=boost-1.84.0 ^
                    https://github.com/boostorg/boost.git boost

            - name: Bootstrap Boost (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent\boost
                  bootstrap.bat

            - name: Boost headers (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent\boost
                  .\b2 headers

            # -----------------------------------------------------------
            # Windows-specific toolchain
            # -----------------------------------------------------------
            - name: Install Visual Studio 2019 Build Tools
              if: runner.os == 'Windows'
              shell: pwsh
              run: |
                  choco install visualstudio2019buildtools `
                    --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --quiet --norestart" -y

            - name: Set up MSVC 2019
              if: runner.os == 'Windows'
              uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: x64
                  toolset: 14.2
                  vsversion: '16.0'

            - name: Install OpenSSL (vcpkg, win64)
              if: runner.os == 'Windows'
              shell: pwsh
              run: |
                  vcpkg install openssl:x64-windows
                  Remove-Item -Path "C:\Program Files\OpenSSL" -Recurse -Force -ErrorAction SilentlyContinue
                  New-Item -Path "C:\OpenSSL-Win64" -ItemType SymbolicLink -Value "C:\vcpkg\packages\openssl_x64-windows"

            - name: Set OpenSSL Paths (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  setx OPENSSL_ROOT_DIR "C:\OpenSSL-Win64" /M
                  setx OPENSSL_INCLUDE_DIR "C:\OpenSSL-Win64\include" /M
                  setx OPENSSL_LIB_DIR "C:\OpenSSL-Win64\lib" /M
                  setx INCLUDE "C:\OpenSSL-Win64\include;%INCLUDE%" /M
                  setx LIB "C:\OpenSSL-Win64\lib;%LIB%" /M

            # -----------------------------------------------------------
            # Common dependency steps
            # -----------------------------------------------------------
            - name: Upgrade pip & setuptools
              run: |
                  python -m pip install --upgrade pip setuptools wheel

            - name: Install OpenSSL & Python setuptools (macOS)
              if: runner.os == 'macOS'
              run: |
                  brew install openssl@3 python-setuptools
                  export PATH=$(brew --prefix)/opt/python@${{ matrix.python-version }}/bin:$PATH

            - name: Update apt lists (Linux)
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update

            - name: Setup ccache (Linux & macOS)
              if: runner.os != 'Windows'
              uses: Chocobo1/setup-ccache-action@v1
              with:
                  update_packager_index: false
                  override_cache_key: ccache-python-${{ matrix.os }}-${{ github.base_ref }}-${{ matrix.python-version }}
                  ccache_options: |
                      max_size=500M

            # -----------------------------------------------------------
            # Build & install Python bindings (all OS)
            # -----------------------------------------------------------
            - name: Build & install Python extension
              run: |
                  if [ "${{ runner.os }}" = "Windows" ]; then
                    cd libtorrent\bindings\python
                    set BOOST_ROOT=%CD%\..\boost
                    set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
                    set PATH=%BOOST_ROOT%;%PATH%
                    py -${{ matrix.python-version }} setup.py build_ext --b2-args "asserts=on invariant-checks=full webtorrent=on" install --user --prefix=
                  else
                    export BOOST_ROOT=$(pwd)/libtorrent/boost
                    export BOOST_BUILD_PATH=$BOOST_ROOT/tools/build
                    export PATH=$BOOST_ROOT/bin:$PATH
                    cd libtorrent/bindings/python
                    python${{ matrix.python-version }} setup.py build_ext --b2-args "asserts=on invariant-checks=full webtorrent=on"
                    python${{ matrix.python-version }} setup.py install --user --prefix=
                  fi

            # -----------------------------------------------------------
            # Upload artifacts
            # -----------------------------------------------------------
            - name: Upload extension artifact
              uses: actions/upload-artifact@v4
              with:
                  name: python-bindings-${{ matrix.os }}-py${{ matrix.python-version }}
                  path: libtorrent/bindings/python/build/**/*.${{ runner.os == 'Windows' && 'pyd' || 'so' }}

            - name: Upload full build directory
              uses: actions/upload-artifact@v4
              with:
                  name: python-bindings-${{ matrix.os }}-py${{ matrix.python-version }}-build
                  path: libtorrent/bindings/python/build/
