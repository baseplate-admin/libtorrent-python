name: Python bindings

on:
    push:
    pull_request:

env:
    HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
    test:
        name: build
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-24.04, macos-latest, windows-latest]

        steps:
            - name: Download source
              run: |
                  git clone https://github.com/arvidn/libtorrent.git --depth=1 --recurse-submodules --branch RC_2_0

            - name: dependencies (MacOS)
              if: runner.os == 'macOS'
              run: |
                  cd libtorrent
                  brew install boost-build boost boost-python3 python@3.13 openssl@3 python-setuptools
                  export PATH=$(brew --prefix)/opt/python@3.13/bin:$PATH

            - name: update package lists (linux)
              if: runner.os == 'Linux'
              continue-on-error: true
              run: |
                  cd libtorrent
                  sudo apt update

            - name: Setup ccache
              if: runner.os != 'Windows'
              uses: Chocobo1/setup-ccache-action@v1
              with:
                  update_packager_index: false
                  override_cache_key: ccache-python-${{ matrix.os }}-${{ github.base_ref }}
                  ccache_options: |
                      max_size=500M

            - name: dependencies (linux)
              if: runner.os == 'Linux'
              run: |
                  cd libtorrent
                  sudo apt install libboost-tools-dev libboost-python-dev libboost-dev libboost-system-dev python3 python3-setuptools libssl-dev nasm

            # Windows specific fixes start here
            - name: Install Windows build tools
              if: runner.os == 'Windows'
              shell: powershell
              run: |
                  # Install NASM
                  Invoke-WebRequest -Uri https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip -OutFile nasm.zip
                  Expand-Archive -Path nasm.zip -DestinationPath nasm
                  echo "C:\nasm" >> $env:GITHUB_PATH

                  # Install Visual Studio Build Tools
                  choco install visualstudio2022buildtools -y --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended"
                  choco install visualstudio2022-workload-nativedesktop -y

            - name: Setup MSVC environment
              if: runner.os == 'Windows'
              uses: ilammy/msvc-dev-cmd@v1

            - name: Build OpenSSL (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  git clone https://github.com/openssl/openssl.git --branch openssl-3.0.12 --depth 1
                  cd openssl
                  perl Configure VC-WIN64A --prefix=%CD%\install no-shared
                  nmake
                  nmake install

            - name: install boost (windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent
                  git clone --depth=1 --recurse-submodules -j10 --branch=boost-1.78.0 https://github.com/boostorg/boost.git
                  cd boost
                  bootstrap.bat

            - name: boost headers (windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent\boost
                  .\b2 headers

            - name: build/install (windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: |
                  cd libtorrent
                  set BOOST_ROOT=%CD%\boost
                  set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
                  set PATH=%BOOST_ROOT%;%PATH%
                  set OPENSSL_ROOT=%CD%\..\openssl\install
                  cd bindings\python
                  python setup.py build_ext --b2-args "asserts=on invariant-checks=full link=static runtime-link=static ssl-link=static -sOPENSSL_ROOT=%OPENSSL_ROOT%" install --user --prefix=

            - name: build no-deprecated (Linux)
              if: runner.os == 'Linux'
              run: |
                  cd libtorrent/bindings/python
                  python3 setup.py build_ext --b2-args "deprecated-functions=off link=static"

            - name: build/install (Linux)
              if: runner.os == 'Linux'
              run: |
                  cd libtorrent/bindings/python
                  python3 setup.py build_ext --b2-args "link=static" install --user --prefix=

            - name: build/install (MacOS)
              if: runner.os == 'macOS'
              run: |
                  cd libtorrent/bindings/python
                  export PATH=$(brew --prefix)/opt/python@3.13/bin:$PATH
                  export OPENSSL_ROOT=$(brew --prefix openssl@3)
                  python3.13 setup.py build_ext --b2-args "link=static ssl=static -sOPENSSL_ROOT=$OPENSSL_ROOT" install --install-lib $(brew --prefix)/lib/python3.13/site-packages
